# It's best to use the servers' private IPs for better performance and security.
# You can find the private IPs at your UpCloud control panel Network section.
#limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
   upstream backend {
      ip_hash;
      server app:80;
      
	
   }


   # This server accepts all traffic to port 80 and passes it to the upstream.
   # Notice that the upstream name and the proxy_pass need to match.
   server {

        listen 80 ssl default_server;
        ssl_certificate  /etc/nginx/ssl/cert.pem;
        ssl_certificate_key     /etc/nginx/ssl/key.pem;


      location / {
	#auth_basic "Restricted Content";
        #auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://backend;
        add_header Set-Cookie cip=$upstream_addr;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options "SAMEORIGIN";
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_http_version      1.1;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header         X-Forwarded-Proto   $scheme;
        proxy_set_header         Upgrade             $http_upgrade;
        proxy_set_header         Connection          $http_connection;
        #Each new SSL connection requires a full SSL handshake between the client and server, which is quite CPU-intensive. To have NGINX proxy previously negotiated connection parameters and use a so-called abbreviated handshake, include the proxy_ssl_session_reuse directive
        proxy_ssl_session_reuse on;

     }
      location /nginx_status {
          stub_status on;
          access_log   on;
          allow  127.0.0.1;
          #deny all;
        }


   }

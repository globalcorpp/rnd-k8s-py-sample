user  nginx;
worker_processes  auto;

# number of file descriptors used for nginx
# the limit for the maximum FDs on the server is usually set by the OS.
# if you don't set FD's then OS settings will be used which is by default 2000
worker_rlimit_nofile 200000;


# only log critical errors
error_log  /app/logs/nginx/error.log crit;
error_log  /app/logs/nginx/error.log emerg;
error_log  /app/logs/nginx/error.log error;
error_log  /app/logs/nginx/error.log alert;
error_log  /app/logs/nginx/debug.log debug;
error_log  /app/logs/nginx/warn.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  4000;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main escape=json '{'
                        '"remote_user":"$remote_addr - $remote_user", '
			'"time":"$time_iso8601", '
                        '"request": "$request $status $body_bytes_sent", '
                        '"referer":"$http_referer", '
                        '"user_agent":"$http_user_agent", '
                        '"real_ip_remote_addr":"$realip_remote_addr", '
                        '"upstream_addr":"$upstream_addr", '
                        '"rt":"$request_time", '
			'"uct":"$upstream_connect_time", '
			'"uht":"$upstream_header_time", '
			'"urt":"$upstream_response_time", '
			'"reqBody":"$request_body" '
		'}';

    # Caches information about open FDs, freqently accessed files.
    # # Changing this setting, in my environment, brought performance up from 560k req/sec, to 904k req/sec.
    # # I recommend using some varient of these options, though not the specific values listed below.
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    #to boost I/O on HDD we can disable access logs
    access_log  /app/logs/nginx/access.log  main ;
    #access_log off;
    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile        on;
    # disable nginx version
    server_tokens off;
    # send headers in one piece, it is better than sending them one by one
    tcp_nopush     on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;
 # server will close connection after this time -- default 75
    keepalive_timeout 1800 ;

    #gzip  on;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 1800;
 # if client stop responding, free up memory -- default 60
    send_timeout 1800;

    fastcgi_read_timeout 1800;

    proxy_read_timeout 1800;

    proxy_buffering  off;

    client_body_buffer_size 1M;
    client_max_body_size 10M;

    #The default nginx buffers per CGI connection are too small
    fastcgi_buffer_size 16k;
    fastcgi_buffers 32 16k;

    include /etc/nginx/conf.d/*.conf;
    # Compression. Reduces the amount of data that needs to be transferred over the network
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable “MSIE [1-6]\.”;
}

